<?php

/**
 * @file
 * Default configuration of contributed modules.
 *
 * Here we do any database related configuration for included modules.
 * These points of configuration includes both custom db queries and
 * variable_set(). The only variable's that should be done in here are
 * ones that require an array of data to be set. Variables that have a
 * single entry (not an array) should be set in guardr.info under the
 * settings section.
 */

/**
 * Implements hook_install().
 */
function guardr_install() {

  // Set password_policy module defaults.
  $policy = array();
  $policy = array(
    'complexity' => 3,
    'delay' => 24,
    'digit_placement' => 2,
    'history' => 24,
    'length' => 8,
    'letter' => 2,
    'username' => 1,
  );

  $pid = db_insert('password_policy')
  ->fields(array(
    'name' => 'Guardr Default',
    'description' => 'The default password policy implementation included with the Guardr distribution.',
    'policy' => serialize($policy),
    'enabled' => 1,
    'expiration' => '90',
    'warning' => '7,14',
    'created' => REQUEST_TIME,
  ))
  ->execute();

  // Enable authenticated role the above for the default password policy.
  db_insert('password_policy_role')
    ->fields(array(
      'pid' => $pid,
      'rid' => 2,
  ))
   ->execute();

  $passphrase = array(
    'length' => 20,
    'username' => 1,
  );

  db_insert('password_policy')
  ->fields(array(
    'name' => 'Guardr Passphrase',
    'description' => 'An alternate Guardr password policy with fewer complexity restrictions, but a longer character length.',
    'policy' => serialize($passphrase),
    'enabled' => 0,
    'created' => REQUEST_TIME,
  ))
  ->execute();

  // Set autologout module defaults.
  $autologout = array(
    'enabled' => 1,
    'timeout' => 1800,
    'use_watchdog' => 1,
    'authenticated user' => 0,
    'logout_message' => 'You have been automatically logged out due to 30 minutes of inactivity.',
    'redirect_url' => '',
    'refresh_delta' => 0,
  );
  variable_set('autologout', $autologout);
}

/**
 * Implements hook_install_tasks_alter().
 */
function guardr_install_tasks_alter(&$tasks, $install_state) {
  $tasks['install_profile_modules']['display_name'] = st('Install Guardr');
  $tasks['install_configure_form']['display_name'] = st('Configure Guardr');

  // Set the installation theme.
  _guardr_set_theme('guardr_admin');
}

/**
 * Force-set a theme at any point during the execution of the request.
 *
 * Drupal doesn't give us the option to set the theme during the installation
 * process and forces enable the maintenance theme too early in the request
 * for us to modify it in a clean way.
 */
function _guardr_set_theme($target_theme) {
  if ($GLOBALS['theme'] != $target_theme) {
    unset($GLOBALS['theme']);

    drupal_static_reset();
    $GLOBALS['conf']['maintenance_theme'] = $target_theme;
    _drupal_maintenance_theme();
  }
}
